{
  "version": 3,
  "sources": ["../../../../node_modules/vue-blox-expressions/dist/vue-blox-expressions.es.js"],
  "sourcesContent": ["var d = Object.defineProperty;\nvar v = (r, t, e) => t in r ? d(r, t, { enumerable: !0, configurable: !0, writable: !0, value: e }) : r[t] = e;\nvar u = (r, t, e) => (v(r, typeof t != \"symbol\" ? t + \"\" : t, e), e);\nimport { BloxError as n } from \"vue-blox\";\nimport { toRaw as g } from \"vue\";\nclass b {\n  constructor(t) {\n    u(this, \"parser\");\n    this.parser = t;\n  }\n  run(t, e, p, l, f) {\n    const a = \"compute:\";\n    if (!t.startsWith(a))\n      return;\n    const s = t.substring(a.length, t.length);\n    if (s.length === 0)\n      throw new n(\n        \"Compute parsing failed.\",\n        \"The value for the prop name for compute must be a string with length > 0.\",\n        {\n          key: t,\n          value: e\n        }\n      );\n    const i = e;\n    if (/^__proto__|prototype|constructor$/.test(i))\n      throw new n(\n        \"Expression parsing failed.\",\n        `The call to parser.evaluate() for value ${e} was aborted because prototype access was detected.`,\n        void 0\n      );\n    const c = {};\n    Object.assign(c, g(p));\n    try {\n      const o = this.parser.evaluate(i, c);\n      l(s, o);\n    } catch (o) {\n      throw new n(\n        \"Expression parsing failed.\",\n        `The call to parser.evaluate() for value ${e} threw the error: ${o}`,\n        void 0\n      );\n    }\n  }\n}\nfunction S({ parser: r }) {\n  return new b(r);\n}\nclass x {\n  constructor(t) {\n    u(this, \"parser\");\n    this.parser = t;\n  }\n  run(t, e, p, l, f) {\n    const a = \"event:\";\n    if (!t.startsWith(a))\n      return;\n    const s = t.substring(a.length, t.length);\n    if (s.length === 0)\n      throw new n(\n        \"Emit parsing failed.\",\n        \"The value for the prop name for emit must be a string with length > 0.\",\n        {\n          key: t,\n          value: e\n        }\n      );\n    const i = e;\n    if (/^__proto__|prototype|constructor$/.test(i))\n      throw new n(\n        \"Expression parsing failed.\",\n        `The call to parser.evaluate() for value ${e} was aborted because prototype access was detected.`,\n        void 0\n      );\n    const c = `on${s.charAt(0).toUpperCase()}${s.slice(1)}`, o = {};\n    Object.assign(o, g(p)), l(c, (...w) => {\n      Object.assign(o, w);\n      try {\n        this.parser.functions.setVariable = (h, m) => {\n          p[h] = m;\n        }, this.parser.evaluate(i, o);\n      } catch (h) {\n        throw new n(\n          \"Expression parsing failed.\",\n          `The call to parser.evaluate() for value ${e} threw the error: ${h}`,\n          void 0\n        );\n      }\n    });\n  }\n}\nfunction T({ parser: r }) {\n  return new x(r);\n}\nexport {\n  b as BloxPluginCompute,\n  x as BloxPluginEvent,\n  S as getPluginCompute,\n  T as getPluginEvent\n};\n"],
  "mappings": ";;;;;;;;;AAAA,IAAI,IAAI,OAAO;AACf,IAAI,IAAI,CAAC,GAAG,GAAG,MAAM,KAAK,IAAI,EAAE,GAAG,GAAG,EAAE,YAAY,MAAI,cAAc,MAAI,UAAU,MAAI,OAAO,EAAE,CAAC,IAAI,EAAE,KAAK;AAC7G,IAAI,IAAI,CAAC,GAAG,GAAG,OAAO,EAAE,GAAG,OAAO,KAAK,WAAW,IAAI,KAAK,GAAG,CAAC,GAAG;AAGlE,IAAM,IAAN,MAAQ;AAAA,EACN,YAAY,GAAG;AACb,MAAE,MAAM,QAAQ;AAChB,SAAK,SAAS;AAAA,EAChB;AAAA,EACA,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG;AACjB,UAAM,IAAI;AACV,QAAI,CAAC,EAAE,WAAW,CAAC;AACjB;AACF,UAAM,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM;AACxC,QAAI,EAAE,WAAW;AACf,YAAM,IAAI;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,OAAO;AAAA,QACT;AAAA,MACF;AACF,UAAM,IAAI;AACV,QAAI,oCAAoC,KAAK,CAAC;AAC5C,YAAM,IAAI;AAAA,QACR;AAAA,QACA,2CAA2C;AAAA,QAC3C;AAAA,MACF;AACF,UAAM,IAAI,CAAC;AACX,WAAO,OAAO,GAAG,MAAE,CAAC,CAAC;AACrB,QAAI;AACF,YAAM,IAAI,KAAK,OAAO,SAAS,GAAG,CAAC;AACnC,QAAE,GAAG,CAAC;AAAA,IACR,SAAS,GAAP;AACA,YAAM,IAAI;AAAA,QACR;AAAA,QACA,2CAA2C,sBAAsB;AAAA,QACjE;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AACA,SAAS,EAAE,EAAE,QAAQ,EAAE,GAAG;AACxB,SAAO,IAAI,EAAE,CAAC;AAChB;AACA,IAAM,IAAN,MAAQ;AAAA,EACN,YAAY,GAAG;AACb,MAAE,MAAM,QAAQ;AAChB,SAAK,SAAS;AAAA,EAChB;AAAA,EACA,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG;AACjB,UAAM,IAAI;AACV,QAAI,CAAC,EAAE,WAAW,CAAC;AACjB;AACF,UAAM,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM;AACxC,QAAI,EAAE,WAAW;AACf,YAAM,IAAI;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,OAAO;AAAA,QACT;AAAA,MACF;AACF,UAAM,IAAI;AACV,QAAI,oCAAoC,KAAK,CAAC;AAC5C,YAAM,IAAI;AAAA,QACR;AAAA,QACA,2CAA2C;AAAA,QAC3C;AAAA,MACF;AACF,UAAM,IAAI,KAAK,EAAE,OAAO,CAAC,EAAE,YAAY,IAAI,EAAE,MAAM,CAAC,KAAK,IAAI,CAAC;AAC9D,WAAO,OAAO,GAAG,MAAE,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,MAAM;AACrC,aAAO,OAAO,GAAG,CAAC;AAClB,UAAI;AACF,aAAK,OAAO,UAAU,cAAc,CAAC,GAAG,MAAM;AAC5C,YAAE,KAAK;AAAA,QACT,GAAG,KAAK,OAAO,SAAS,GAAG,CAAC;AAAA,MAC9B,SAAS,GAAP;AACA,cAAM,IAAI;AAAA,UACR;AAAA,UACA,2CAA2C,sBAAsB;AAAA,UACjE;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AACF;AACA,SAAS,EAAE,EAAE,QAAQ,EAAE,GAAG;AACxB,SAAO,IAAI,EAAE,CAAC;AAChB;",
  "names": []
}
